<Window x:Class="CCube.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CCube"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Collaboration Context Console" Height="450" Width="1000"
        DataContext="{x:Static local:ApplicationData.Service}"
        Language="{Binding Language}" Icon="CCubedIcon.ico">
    <Window.Resources>
        <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button"/>

        <local:TitleValueConverter x:Key="TitleValueConverter"/>
        <local:StartStopButtonEnabledConverter x:Key="StartStopButtonEnabledConverter"/>
        <local:VisibilityToBlurRadiusConverter x:Key="VisibilityToBlurRadiusConverter"/>
        <local:ProgressMaxValueToVisibilityConverter x:Key="ProgressMaxValueToVisibilityConverter"/>

        <Viewbox x:Key="Replace" x:Shared="False">
            <Canvas Width="384" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M224,136L224,0 24,0C10.7,0,0,10.7,0,24L0,488C0,501.3,10.7,512,24,512L360,512C373.3,512,384,501.3,384,488L384,160 248,160C234.8,160,224,149.2,224,136z M289.18,352.01L224,352.01 224,432.01C224,440.85,216.84,448.01,208,448.01L176,448.01C167.16,448.01,160,440.85,160,432.01L160,352.01 94.82,352.01C80.54,352.01,73.41,334.72,83.55,324.65L179.97,228.95C186.62,222.34,197.36,222.34,204.01,228.95L300.43,324.65C310.58,334.72,303.46,352.01,289.18,352.01z M377,105L279.1,7C274.6,2.5,268.5,0,262.1,0L256,0 256,128 384,128 384,121.9C384,115.6,381.5,109.5,377,105z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Add" x:Shared="False">
            <Canvas Width="384" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M377,105L279.1,7C274.6,2.5,268.5,0,262.1,0L256,0 256,128 384,128 384,121.9C384,115.6,381.5,109.5,377,105z M224,136L224,0 24,0C10.7,0,0,10.7,0,24L0,488C0,501.3,10.7,512,24,512L360,512C373.3,512,384,501.3,384,488L384,160 248,160C234.8,160,224,149.2,224,136z M288,296L288,344C288,348.4,284.4,352,280,352L224,352 224,408C224,412.4,220.4,416,216,416L168,416C163.6,416,160,412.4,160,408L160,352 104,352C99.6,352,96,348.4,96,344L96,296C96,291.6,99.6,288,104,288L160,288 160,232C160,227.6,163.6,224,168,224L216,224C220.4,224,224,227.6,224,232L224,288 280,288C284.4,288,288,291.6,288,296z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="User" x:Shared="False">
            <Canvas Width="496" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M248,8C111,8 0,119 0,256 0,393 111,504 248,504 385,504 496,393 496,256 496,119 385,8 248,8z M248,104C296.6,104 336,143.4 336,192 336,240.6 296.6,280 248,280 199.4,280 160,240.6 160,192 160,143.4 199.4,104 248,104z M248,448C189.3,448 136.7,421.4 101.5,379.8 120.3,344.4 157.1,320 200,320 202.4,320 204.8,320.4 207.1,321.1 220.1,325.3 233.7,328 248,328 262.3,328 276,325.3 288.9,321.1 291.2,320.4 293.6,320 296,320 338.9,320 375.7,344.4 394.5,379.8 359.3,421.4 306.7,448 248,448z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Start" x:Shared="False">
            <Canvas Width="512" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M371.7,238L195.7,131C179.9,122.2,160,133.5,160,152L160,360C160,378.4,179.8,389.8,195.7,381L371.7,280C388.1,270.9,388.1,247.2,371.7,238z M504,256C504,119 393,8 256,8 119,8 8,119 8,256 8,393 119,504 256,504 393,504 504,393 504,256z M56,256C56,145.5 145.5,56 256,56 366.5,56 456,145.5 456,256 456,366.5 366.5,456 256,456 145.5,456 56,366.5 56,256z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Stop" x:Shared="False">
            <Canvas Width="512" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M504,256C504,119 393,8 256,8 119,8 8,119 8,256 8,393 119,504 256,504 393,504 504,393 504,256z M56,256C56,145.5 145.5,56 256,56 366.5,56 456,145.5 456,256 456,366.5 366.5,456 256,456 145.5,456 56,366.5 56,256z M352,176L352,336C352,344.8,344.8,352,336,352L176,352C167.2,352,160,344.8,160,336L160,176C160,167.2,167.2,160,176,160L336,160C344.8,160,352,167.2,352,176z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Hourglass" x:Shared="False">
            <Canvas Width="448" Height="512">
                <Path x:Name="HourglassViewbox"  Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M432,304C432,418.9 338.9,512 224,512 109.1,512 16,418.9 16,304 16,200 92.3,113.8 192,98.5L192,64 164,64C157.4,64,152,58.6,152,52L152,12C152,5.4,157.4,0,164,0L284,0C290.6,0,296,5.4,296,12L296,52C296,58.6,290.6,64,284,64L256,64 256,98.5C293.5,104.3,327.7,120.1,355.7,143.1L383.2,115.6C387.9,110.9,395.5,110.9,400.2,115.6L428.5,143.9C433.2,148.6,433.2,156.2,428.5,160.9L399.1,190.3 398.5,190.9C419.7,223.3,432,262.2,432,304z M256,340L256,188.5C256,181.9,250.6,176.5,244,176.5L204,176.5C197.4,176.5,192,181.9,192,188.5L192,340C192,346.6,197.4,352,204,352L244,352C250.6,352,256,346.6,256,340z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Skull" x:Shared="False">
            <Canvas Width="448" Height="512">
                <Path x:Name="SkullViewbox" Fill="Black" Data="M439.15,453.06L297.17,384 439.16,314.94C447.06,310.99,450.27,301.38,446.31,293.48L432,264.85C428.05,256.95,418.44,253.74,410.53,257.69L224,348.41 37.47,257.69C29.57,253.74,19.96,256.94,16,264.85L1.69,293.48C-2.26,301.38,0.94,310.99,8.84,314.94L150.83,384 8.85,453.06C0.949999999999999,457.01,-2.26,466.62,1.7,474.53L16.01,503.16C19.96,511.06,29.57,514.27,37.48,510.31L224,419.59 410.53,510.31C418.43,514.26,428.04,511.06,432,503.16L446.31,474.53C450.26,466.62,447.05,457.01,439.15,453.06z M150,237.28L144.52,263.15C141.85,275.77,149.94,288,160.97,288L287.05,288C298.08,288,306.17,275.77,303.5,263.15L298,237.28C339.78,214.87 368,174.53 368,128 368,57.31 303.53,0 224,0 144.47,0 80,57.31 80,128 80,174.53 108.22,214.87 150,237.28z M280,112C297.65,112 312,126.35 312,144 312,161.65 297.65,176 280,176 262.35,176 248,161.65 248,144 248,126.35 262.35,112 280,112z M168,112C185.65,112 200,126.35 200,144 200,161.65 185.65,176 168,176 150.35,176 136,161.65 136,144 136,126.35 150.35,112 168,112z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="XMLFile" x:Shared="False">
            <Canvas Width="384" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M384,121.941L384,128 256,128 256,0 262.059,0C268.424,0,274.529,2.529,279.03,7.029L376.971,104.97A24.005,24.005,0,0,1,384,121.941z M248,160C234.8,160,224,149.2,224,136L224,0 24,0C10.745,0,0,10.745,0,24L0,488C0,501.255,10.745,512,24,512L360,512C373.255,512,384,501.255,384,488L384,160 248,160z M123.206,400.505A5.4,5.4,0,0,1,115.573,400.751L50.707,339.939A5.4,5.4,0,0,1,50.707,332.06L115.573,271.248A5.4,5.4,0,0,1,123.206,271.494L142.785,292.379A5.4,5.4,0,0,1,142.413,300.126L101.65,336 142.413,371.874A5.4,5.4,0,0,1,142.785,379.621L123.206,400.505z M174.501,450.984L147.048,443.014A5.402,5.402,0,0,1,143.367,436.322L204.807,224.696A5.402,5.402,0,0,1,211.499,221.015L238.951,228.985A5.4,5.4,0,0,1,242.631,235.677L181.191,447.303A5.397,5.397,0,0,1,174.501,450.984z M335.293,339.939L270.427,400.751A5.4,5.4,0,0,1,262.794,400.505L243.214,379.62A5.4,5.4,0,0,1,243.586,371.873L284.35,336 243.587,300.126A5.4,5.4,0,0,1,243.215,292.379L262.795,271.494A5.4,5.4,0,0,1,270.428,271.248L335.294,332.06A5.4,5.4,0,0,1,335.293,339.939z"/>
            </Canvas>
        </Viewbox>
    </Window.Resources>
    <Grid>
        <local:LogIn KeyboardNavigation.TabNavigation="Cycle" Visibility="Hidden" x:Name="LogInWindow" Panel.ZIndex="1"/>

        <Grid Margin="8" KeyboardNavigation.TabNavigation="Cycle">
            <Grid.Effect>
                <BlurEffect>
                    <BlurEffect.Radius>
                        <MultiBinding Converter="{StaticResource VisibilityToBlurRadiusConverter}">
                            <Binding Path="Visibility" ElementName="LogInWindow"/>
                        </MultiBinding>
                    </BlurEffect.Radius>
                </BlurEffect>
            </Grid.Effect>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" MinWidth="200"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="1*" MinWidth="200"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" MinHeight="100"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="0" MinHeight="{Binding Notifier.Notifications.Count, Converter={local:NotificationCountToMinHeightConverter}}"/>
            </Grid.RowDefinitions>
            <Grid Margin="0,0,0,8" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel>
                    <Button IsEnabled="{Binding ImportManager.Status, Converter={local:ImportStatusToEnabledConverter}}" Content="{StaticResource Replace}" ToolTip="Replace existing items" Click="ButtonBrowse_Click" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="35" Height="35"/>
                    <Button x:Name="insertButton" IsEnabled="{Binding ImportManager.Status, Converter={local:ImportStatusToEnabledConverter}}" Content="{StaticResource Add}" ToolTip="Add items" Click="ButtonBrowse_Click" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,5,0,0" Width="35" Height="35"/>
                </StackPanel>

                <Grid Grid.Column="1" Margin="8,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ProgressBar Visibility="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Maximum, Converter={StaticResource ProgressMaxValueToVisibilityConverter}}" Grid.ColumnSpan="5" Height="10" Maximum="{Binding Stats.InputsTotal}" Value="{Binding Stats.InputsProcessed,Mode=OneWay}">

                        <ProgressBar.Foreground>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="{Binding ElementName=CompletedIndicator, Path=Color}" Offset="0"/>
                                <GradientStop x:Name="CompletedIndicator" Color="#FF01D328" Offset="{Binding Stats.InputsSuccessfulRate}"/>
                                <GradientStop x:Name="FailedIndicator"  Color="Red" Offset="{Binding ElementName=CompletedIndicator,Path=Offset}"/>
                                <GradientStop Color="{Binding ElementName=FailedIndicator, Path=Color}" Offset="1"/>
                            </LinearGradientBrush>
                        </ProgressBar.Foreground>
                    </ProgressBar>


                    <WrapPanel Grid.Row="1">
                        <GroupBox Header="Time">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel>
                                    <Label Content="Remaining"/>
                                    <Label Content="{Binding Stats.EstimatedRemainingTime}" ContentStringFormat="d'd 'h'h 'm'm'" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="ETA"/>
                                    <Label Content="{Binding Stats.EstimatedTimeOfCompletion}" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                        
                        <GroupBox Header="Chunks">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel>
                                    <Label Content="Total"/>
                                    <Label Content="{Binding Stats.InputsTotal}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Waiting"/>
                                    <Label Content="{Binding Stats.InputsWaiting}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Running"/>
                                    <Label Content="{Binding Stats.InputsRunning}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Successful"/>
                                    <Label Content="{Binding Stats.InputsSuccessful}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Failed"/>
                                    <Label Content="{Binding Stats.InputsFailed}" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Iterations">
                            <StackPanel Orientation="Horizontal" >
                                <StackPanel>
                                    <Label Content="Total"/>
                                    <Label Content="{Binding Stats.IterationsTotal}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Successful"/>
                                    <Label Content="{Binding Stats.IterationsSuccessful}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Failed"/>
                                    <Label Content="{Binding Stats.IterationsFailed}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Success rate"/>
                                    <Label Content="{Binding Stats.IterationsSuccessRate}" ContentStringFormat="P" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Filter">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel>
                                    <CheckBox IsChecked="True" x:Name="CheckBoxWaiting" Content="Waiting" Checked="FilterCheckBoxChanged" Unchecked="FilterCheckBoxChanged"/>
                                    <CheckBox IsChecked="True" x:Name="CheckBoxSuccessful" Content="Succeeded" Checked="FilterCheckBoxChanged" Unchecked="FilterCheckBoxChanged"/>
                                </StackPanel>

                                <StackPanel Margin="8,0,0,0">
                                    <CheckBox IsChecked="True" x:Name="CheckBoxRunning" Content="Running" Checked="FilterCheckBoxChanged" Unchecked="FilterCheckBoxChanged"/>
                                    <CheckBox IsChecked="True" x:Name="CheckBoxFailed" Content="Failed" Checked="FilterCheckBoxChanged" Unchecked="FilterCheckBoxChanged"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                    </WrapPanel>
                </Grid>

                <Button Grid.Column="2" IsEnabled="{Binding ImportManager.Status, Converter={local:ImportStatusToEnabledConverter}}" Content="{StaticResource User}" ToolTip="Login credentials" Click="Button_Click" Margin="0,0,8,0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="35" Height="35"/>
                <Button Grid.Column="3" x:Name="goButton"
                        ToolTip="{Binding ImportManager.Status, Converter={local:ImportStatusToContentConverter StartContent='Start', StopContent='Stop and wait for current chunk import to complete', StoppingContent='Waiting for current chunk import to complete, click to force stop'}}"
                        Click="GoButton_Click" HorizontalAlignment="Center" VerticalAlignment="Top" Width="35" Height="35">
                    <Button.Content>
                        <MultiBinding Converter="{local:ImportStatusToContentConverter}">
                            <Binding Path="ImportManager.Status"/>
                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="IsMouseOver"/>
                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="IsEnabled"/>
                        </MultiBinding>
                    </Button.Content>
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource StartStopButtonEnabledConverter}">
                            <Binding Path="ImportManager.Status"/>
                            <Binding Path="ImportManager.KillCooldown"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
            </Grid>

            <Grid Grid.Row="1" Margin="0,0,2.5,2.5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <DataGrid AlternatingRowBackground="#FFD9D9D9" HorizontalGridLinesBrush="#FFD9D9D9" VerticalGridLinesBrush="#FFD9D9D9" x:Name="dataGridInputs" AutoGenerateColumns="False" ItemsSource="{Binding InputsViewSource.View}" IsReadOnly="True" AlternationCount="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#" Binding="{Binding SequenceNumber}"/>
                        <DataGridTextColumn Header="Chunk name" Binding="{Binding ChunkName}"/>
                        <DataGridTextColumn Header="Status" Binding="{Binding CurrentActiveIteration.CurrentStatus}"/>
                        <DataGridTextColumn Header="Iteration" Binding="{Binding CurrentActiveIteration.IterationNumber}"/>
                        <DataGridTextColumn Header="Start time" Binding="{Binding CurrentActiveIteration.StartTime}"/>
                        <DataGridTextColumn Header="End time" Binding="{Binding CurrentActiveIteration.EndTime}"/>
                        <DataGridTextColumn Header="Duration" Binding="{Binding CurrentActiveIteration.Duration, StringFormat={}{0:hh':'mm':'ss}}"/>
                        <DataGridTextColumn Header="eMS project id" Binding="{Binding CCCommandParameters.ProjectId}"/>
                        <DataGridTextColumn Header="eMS external id" Binding="{Binding CCCommandParameters.NodeExternalId}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Grid Grid.Row="2" Margin="0,2.5,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="OpenLogFolderButton" Height="25" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Click="OpenLogFolderButton_Click" Margin="0,0,2.5,0">
                        <Button.Content>
                            <TextBlock VerticalAlignment="Center">
                            <Run Text="Open log directory: "/>
                            <Run Text="{x:Static local:Logger.LogDirectory}" FontStyle="Italic"/>
                            </TextBlock>
                        </Button.Content>
                    </Button>

                    <GroupBox x:Name="ParamsOutOptions"  Header="Export parameters"  Grid.Column="2">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <StackPanel>
                                <RadioButton IsChecked="{Binding ExportVisibleParams}" Content="Visible" GroupName="ParamsOut"/>
                                <RadioButton IsChecked="{Binding ExportVisibleParams, Mode=OneWay, Converter={local:ParamsOutVisibleConverter}}" Content="Selected" GroupName="ParamsOut"/>
                            </StackPanel>

                            <Button x:Name="ExportConfig" IsEnabled="{Binding ImportManager.Status, Converter={local:ImportStatusToEnabledConverter}}" Content="{StaticResource XMLFile}" VerticalAlignment="Center" ToolTip="Export parameters file" Height="35" Width="35" Margin="5,0,0,0" Click="ExportConfig_Click"/>
                        </StackPanel>
                    </GroupBox>

                </Grid>

            </Grid>
            <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" Grid.ColumnSpan="3" />
            <GroupBox Header="Log" Grid.Row="3" Grid.ColumnSpan="3">
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Notifier.Notifications}" SelectionMode="Single" IsReadOnly="True" Margin="0,1,0,0">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Type" Binding="{Binding NotificationType}"/>
                        <DataGridTextColumn Header="Message" Binding="{Binding Message}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" DataContext="{Binding ElementName=dataGridInputs, Path=SelectedItem}" Grid.Row="1" Grid.Column="2">
                <StackPanel VerticalAlignment="Top">
                    <Expander  Header="Input">

                        <local:SummaryDisplay Margin="0,8,0,0">
                            <local:SummaryDisplay.DataContext>
                                <MultiBinding Converter="{StaticResource TitleValueConverter}">
                                    <MultiBinding.ConverterParameter>
                                        <x:Array Type="sys:String">
                                            <sys:String>Chunk name:</sys:String>
                                            <sys:String>eMS project id:</sys:String>
                                            <sys:String>eMS node external id:</sys:String>
                                            <sys:String>Incremental:</sys:String>
                                            <sys:String>Check-in:</sys:String>
                                            <sys:String>3D mapping:</sys:String>
                                            <sys:String>Comment:</sys:String>
                                            <sys:String>Command:</sys:String>
                                            <sys:String>XML:</sys:String>
                                        </x:Array>
                                    </MultiBinding.ConverterParameter>

                                    <Binding Path="ChunkName"/>
                                    <Binding Path="CCCommandParameters.ProjectId"/>
                                    <Binding Path="CCCommandParameters.NodeExternalId"/>
                                    <Binding Path="CCCommandParameters.Incremental"/>
                                    <Binding Path="CCCommandParameters.CheckIn"/>
                                    <Binding Path="CCCommandParameters.ThreeDMapping"/>
                                    <Binding Path="CCCommandParameters.Comment"/>
                                    <Binding Path="CCCommandParameters"/>
                                    <Binding Path="XMLElement"/>
                                </MultiBinding>
                            </local:SummaryDisplay.DataContext>
                        </local:SummaryDisplay>

                    </Expander>

                    <Expander Header="Current iteration" IsExpanded="True">

                        <local:SummaryDisplay Margin="0,8,0,0">
                            <local:SummaryDisplay.DataContext>
                                <MultiBinding Converter="{StaticResource TitleValueConverter}">
                                    <MultiBinding.ConverterParameter>
                                        <x:Array Type="sys:String">
                                            <sys:String>Number:</sys:String>
                                            <sys:String>Status:</sys:String>
                                            <sys:String>Start time:</sys:String>
                                            <sys:String>Duration:</sys:String>
                                            <sys:String>Message:</sys:String>
                                        </x:Array>
                                    </MultiBinding.ConverterParameter>

                                    <Binding Path="CurrentActiveIteration.IterationNumber"/>
                                    <Binding Path="CurrentActiveIteration.CurrentStatus"/>
                                    <Binding Path="CurrentActiveIteration.StartTime"/>
                                    <Binding Path="CurrentActiveIteration.Duration"/>
                                    <Binding Path="CurrentActiveIteration.Message"/>
                                </MultiBinding>
                            </local:SummaryDisplay.DataContext>
                        </local:SummaryDisplay>

                    </Expander>

                    <Expander Header="Iterations">

                        <DataGrid AlternatingRowBackground="#FFD9D9D9" VerticalGridLinesBrush="#FFD9D9D9" HorizontalGridLinesBrush="#FFD9D9D9" ItemsSource="{Binding Iterations}" AutoGenerateColumns="False" IsReadOnly="True" AlternationCount="2" SelectionUnit="Cell" Margin="0,8,0,0" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="#" Binding="{Binding IterationNumber}" SortDirection="Ascending"/>
                                <DataGridTextColumn Header="Status" Binding="{Binding CurrentStatus}"/>
                                <DataGridTextColumn Header="Start time" Binding="{Binding StartTime}"/>
                                <DataGridTextColumn Header="Duration" Binding="{Binding Duration, StringFormat={}{0:hh':'mm':'ss}}"/>
                                <DataGridTextColumn Header="Message" Binding="{Binding Message}" Width="200">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Execution log" Binding="{Binding ExecutionLogString}" Width="250">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                    </Expander>
                </StackPanel>
            </ScrollViewer>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="1"/>
        </Grid>
    </Grid>
</Window>