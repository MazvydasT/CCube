<Window x:Class="CCube.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CCube"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Collaboration Context Console" Height="450" Width="1000"
        DataContext="{x:Static local:ApplicationData.Service}"
        Language="{Binding Language}" Icon="CCubedIcon.ico">
    <Window.Resources>
        <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button"/>

        <local:TitleValueConverter x:Key="TitleValueConverter"/>
        <local:StartStopButtonEnabledConverter x:Key="StartStopButtonEnabledConverter"/>
        <local:VisibilityToBlurRadiusConverter x:Key="VisibilityToBlurRadiusConverter"/>
        <local:ImportStatusToVisibilityConverter x:Key="ImportStatusToVisibilityConverter"/>
        <local:ProgressMaxValueToVisibilityConverter x:Key="ProgressMaxValueToVisibilityConverter"/>

        <SolidColorBrush x:Key="BlackBrush" Color="Black" x:Shared="False"/>

        <Viewbox x:Key="Replace" x:Shared="False">
            <Canvas Width="640" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M629.657,343.598L528.971,444.284C519.598,453.656,504.403,453.656,495.03,444.284L394.343,343.598C384.97,334.225,384.97,319.029,394.343,309.657L405.166,298.834C414.728,289.272,430.299,289.494,439.585,299.326L480,342.118 480,160 292.451,160A24.005,24.005,0,0,1,275.48,152.971L259.48,136.971C244.361,121.851,255.069,96,276.451,96L520,96C533.255,96,544,106.745,544,120L544,342.118 584.416,299.326C593.701,289.495,609.272,289.272,618.835,298.834L629.658,309.657C639.03,319.029,639.03,334.226,629.657,343.598z M364.519,359.029A23.999,23.999,0,0,0,347.548,352L160,352 160,169.881 200.416,212.673C209.702,222.504,225.272,222.727,234.835,213.164L245.657,202.342C255.03,192.969,255.03,177.773,245.657,168.401L144.971,67.716C135.598,58.343,120.402,58.343,111.03,67.716L10.343,168.402C0.970000000000001,177.775,0.970000000000001,192.971,10.343,202.343L21.165,213.165C30.727,222.727,46.298,222.505,55.584,212.674L96,169.881 96,392C96,405.255,106.745,416,120,416L363.549,416C384.931,416,395.639,390.149,380.52,375.029L364.519,359.029z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Add" x:Shared="False">
            <Canvas Width="448" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M352,240L352,272C352,278.6,346.6,284,340,284L252,284 252,372C252,378.6,246.6,384,240,384L208,384C201.4,384,196,378.6,196,372L196,284 108,284C101.4,284,96,278.6,96,272L96,240C96,233.4,101.4,228,108,228L196,228 196,140C196,133.4,201.4,128,208,128L240,128C246.6,128,252,133.4,252,140L252,228 340,228C346.6,228,352,233.4,352,240z M448,80L448,432C448,458.5,426.5,480,400,480L48,480C21.5,480,0,458.5,0,432L0,80C0,53.5,21.5,32,48,32L400,32C426.5,32,448,53.5,448,80z M400,426L400,86C400,82.7,397.3,80,394,80L54,80C50.7,80,48,82.7,48,86L48,426C48,429.3,50.7,432,54,432L394,432C397.3,432,400,429.3,400,426z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="User" x:Shared="False">
            <Canvas Width="448" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M313.6,304C284.9,304 271.1,320 224,320 176.9,320 163.2,304 134.4,304 60.2,304 0,364.2 0,438.4L0,464C0,490.5,21.5,512,48,512L400,512C426.5,512,448,490.5,448,464L448,438.4C448,364.2,387.8,304,313.6,304z M400,464L48,464 48,438.4C48,390.8 86.8,352 134.4,352 149,352 172.7,368 224,368 275.7,368 298.9,352 313.6,352 361.2,352 400,390.8 400,438.4L400,464z M224,288C303.5,288 368,223.5 368,144 368,64.5 303.5,0 224,0 144.5,0 80,64.5 80,144 80,223.5 144.5,288 224,288z M224,48C276.9,48 320,91.1 320,144 320,196.9 276.9,240 224,240 171.1,240 128,196.9 128,144 128,91.1 171.1,48 224,48z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Start" x:Shared="False">
            <Canvas Width="448" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M424.4,214.7L72.4,6.6C43.8,-10.3,0,6.1,0,47.9L0,464C0,501.5,40.7,524.1,72.4,505.3L424.4,297.3C455.8,278.8,455.9,233.2,424.4,214.7z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Stop" x:Shared="False">
            <Canvas Width="448" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M400,32L48,32C21.5,32,0,53.5,0,80L0,432C0,458.5,21.5,480,48,480L400,480C426.5,480,448,458.5,448,432L448,80C448,53.5,426.5,32,400,32z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Hourglass" x:Shared="False">
            <Canvas Width="384" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M360,0L24,0C10.745,0,0,10.745,0,24L0,40C0,53.255 10.745,64 24,64 24,154.965 75.016,231.734 144.842,256 75.016,280.266 24,357.035 24,448 10.745,448 0,458.745 0,472L0,488C0,501.255,10.745,512,24,512L360,512C373.255,512,384,501.255,384,488L384,472C384,458.745 373.255,448 360,448 360,357.035 308.984,280.266 239.158,256 308.984,231.734 360,154.965 360,64 373.255,64 384,53.255 384,40L384,24C384,10.745,373.255,0,360,0z M284.922,384L99.08,384C116.139,337.203 151.176,304 192,304 232.821,304 267.862,337.196 284.922,384z M284.941,128L99.078,128C91.988,108.548,88,86.748,88,64L296,64C296,86.805,292.013,108.587,284.941,128z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="XMLFile" x:Shared="False">
            <Canvas Width="384" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M149.9,349.1L149.7,348.9 116.9,320 149.7,291.1C153.3,287.9,153.7,282.3,150.5,278.7L150.3,278.5 132.9,259.9C129.5,256.3,123.9,256.2,120.5,259.5L62.8,313.6C59.1,317.1,59.1,323,62.8,326.4L120.5,380.5C122.1,382 124.3,382.9 126.5,382.9 128.9,382.9 131.3,381.9 132.9,380.1L150.3,361.5C153.6,358,153.4,352.4,149.9,349.1z M369.9,97.9L286,14C277,5,264.8,-0.1,252.1,-0.1L48,-0.1C21.5,0,0,21.5,0,48L0,464C0,490.5,21.5,512,48,512L336,512C362.5,512,384,490.5,384,464L384,131.9C384,119.2,378.9,106.9,369.9,97.9z M256,51.9L332.1,128 256,128z M336,464L48,464 48,48 208,48 208,152C208,165.3,218.7,176,232,176L336,176z M209.6,214C204.9,212.6,200.1,215.3,198.7,220L144,408.1C142.6,412.8,145.3,417.7,150,419L174.4,426.1C179.1,427.5,184,424.7,185.3,420.1L240,231.9C241.4,227.2,238.7,222.3,234,221z M234.1,290.9L234.3,291.1 267.1,320 234.3,348.9C230.7,352.1,230.3,357.7,233.5,361.3L233.7,361.5 251.1,380.1C254.4,383.6,260,383.8,263.5,380.5L321.2,326.4C324.9,322.9,324.9,317,321.2,313.6L263.5,259.5C260,256.2,254.4,256.3,251.1,259.9L233.7,278.5C230.4,282,230.6,287.6,234.1,290.9z"/>
            </Canvas>
        </Viewbox>
    </Window.Resources>
    <Grid>
        <local:LogIn Visibility="Hidden" x:Name="LogInWindow" Panel.ZIndex="1"/>

        <Grid Margin="8">
            <Grid.Effect>
                <BlurEffect>
                    <BlurEffect.Radius>
                        <MultiBinding Converter="{StaticResource VisibilityToBlurRadiusConverter}">
                            <Binding Path="Visibility" ElementName="LogInWindow"/>
                        </MultiBinding>
                    </BlurEffect.Radius>
                </BlurEffect>
            </Grid.Effect>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" MinWidth="200"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="1*" MinWidth="200"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" MinHeight="100"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="0" MinHeight="{Binding Notifier.Notifications.Count, Converter={local:NotificationCountToMinHeightConverter}}"/>
            </Grid.RowDefinitions>
            <Grid Margin="0,0,0,8" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel>
                    <Button Visibility="{Binding ImportManager.Status, Converter={StaticResource ImportStatusToVisibilityConverter}}" Content="{StaticResource Replace}" ToolTip="Replace existing items" Click="ButtonBrowse_Click" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="35" Height="35"/>
                    <Button x:Name="insertButton" Visibility="{Binding ImportManager.Status, Converter={StaticResource ImportStatusToVisibilityConverter}}" Content="{StaticResource Add}" ToolTip="Add items" Click="ButtonBrowse_Click" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,5,0,0" Width="35" Height="35"/>
                </StackPanel>

                <Grid Grid.Column="1" Margin="8,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ProgressBar Visibility="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Maximum, Converter={StaticResource ProgressMaxValueToVisibilityConverter}}" Grid.ColumnSpan="5" Height="10" Maximum="{Binding Stats.InputsTotal}" Value="{Binding Stats.InputsProcessed,Mode=OneWay}">

                        <ProgressBar.Foreground>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="{Binding ElementName=CompletedIndicator, Path=Color}" Offset="0"/>
                                <GradientStop x:Name="CompletedIndicator" Color="#FF01D328" Offset="{Binding Stats.InputsSuccessfulRate}"/>
                                <GradientStop x:Name="FailedIndicator"  Color="Red" Offset="{Binding ElementName=CompletedIndicator,Path=Offset}"/>
                                <GradientStop Color="{Binding ElementName=FailedIndicator, Path=Color}" Offset="1"/>
                            </LinearGradientBrush>
                        </ProgressBar.Foreground>
                    </ProgressBar>


                    <WrapPanel Grid.Row="1">
                        <GroupBox Header="Time">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel>
                                    <Label Content="Remaining"/>
                                    <Label Content="{Binding Stats.EstimatedRemainingTime}" ContentStringFormat="d'd 'h'h 'm'm'" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="ETA"/>
                                    <Label Content="{Binding Stats.EstimatedTimeOfCompletion}" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                        
                        <GroupBox Header="Chunks">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel>
                                    <Label Content="Total"/>
                                    <Label Content="{Binding Stats.InputsTotal}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Waiting"/>
                                    <Label Content="{Binding Stats.InputsWaiting}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Running"/>
                                    <Label Content="{Binding Stats.InputsRunning}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Successful"/>
                                    <Label Content="{Binding Stats.InputsSuccessful}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Failed"/>
                                    <Label Content="{Binding Stats.InputsFailed}" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Iterations">
                            <StackPanel Orientation="Horizontal" >
                                <StackPanel>
                                    <Label Content="Total"/>
                                    <Label Content="{Binding Stats.IterationsTotal}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Successful"/>
                                    <Label Content="{Binding Stats.IterationsSuccessful}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Failed"/>
                                    <Label Content="{Binding Stats.IterationsFailed}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel>
                                    <Label Content="Success rate"/>
                                    <Label Content="{Binding Stats.IterationsSuccessRate}" ContentStringFormat="P" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Filter">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel>
                                    <CheckBox IsChecked="True" x:Name="CheckBoxWaiting" Content="Waiting" Checked="FilterCheckBoxChanged" Unchecked="FilterCheckBoxChanged"/>
                                    <CheckBox IsChecked="True" x:Name="CheckBoxSuccessful" Content="Succeeded" Checked="FilterCheckBoxChanged" Unchecked="FilterCheckBoxChanged"/>
                                </StackPanel>

                                <StackPanel Margin="8,0,0,0">
                                    <CheckBox IsChecked="True" x:Name="CheckBoxRunning" Content="Running" Checked="FilterCheckBoxChanged" Unchecked="FilterCheckBoxChanged"/>
                                    <CheckBox IsChecked="True" x:Name="CheckBoxFailed" Content="Failed" Checked="FilterCheckBoxChanged" Unchecked="FilterCheckBoxChanged"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                    </WrapPanel>
                </Grid>

                <Button Grid.Column="2" Visibility="{Binding ImportManager.Status, Converter={StaticResource ImportStatusToVisibilityConverter}}" Content="{StaticResource User}" ToolTip="Login credentials" Click="Button_Click" Margin="0,0,8,0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="35" Height="35"/>
                <Button Grid.Column="3" x:Name="goButton"
                        Content="{Binding ImportManager.Status, Converter={local:ImportStatusToContentConverter}}"
                        ToolTip="{Binding ImportManager.Status, Converter={local:ImportStatusToContentConverter StartContent=Start, StopContent=Stop, StoppingContent=Stopping}}"
                        Click="GoButton_Click" HorizontalAlignment="Center" VerticalAlignment="Top" Width="35" Height="35">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource StartStopButtonEnabledConverter}">
                            <Binding Path="ImportManager.Status"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
            </Grid>

            <Grid Grid.Row="1" Margin="0,0,2.5,2.5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <DataGrid AlternatingRowBackground="#FFD9D9D9" HorizontalGridLinesBrush="#FFD9D9D9" VerticalGridLinesBrush="#FFD9D9D9" x:Name="dataGridInputs" AutoGenerateColumns="False" ItemsSource="{Binding InputsViewSource.View}" IsReadOnly="True" AlternationCount="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#" Binding="{Binding SequenceNumber}"/>
                        <DataGridTextColumn Header="Chunk name" Binding="{Binding ChunkName}"/>
                        <DataGridTextColumn Header="Status" Binding="{Binding CurrentActiveIteration.CurrentStatus}"/>
                        <DataGridTextColumn Header="Iteration" Binding="{Binding CurrentActiveIteration.IterationNumber}"/>
                        <DataGridTextColumn Header="Start time" Binding="{Binding CurrentActiveIteration.StartTime}"/>
                        <DataGridTextColumn Header="End time" Binding="{Binding CurrentActiveIteration.EndTime}"/>
                        <DataGridTextColumn Header="Duration" Binding="{Binding CurrentActiveIteration.Duration, StringFormat={}{0:hh':'mm':'ss}}"/>
                        <DataGridTextColumn Header="eMS project id" Binding="{Binding CCCommandParameters.ProjectId}"/>
                        <DataGridTextColumn Header="eMS external id" Binding="{Binding CCCommandParameters.NodeExternalId}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Grid Grid.Row="2" Margin="0,2.5,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="OpenLogFolderButton" Height="25" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Click="OpenLogFolderButton_Click" Margin="0,0,2.5,0">
                        <Button.Content>
                            <TextBlock VerticalAlignment="Center">
                            <Run Text="Open log directory: "/>
                            <Run Text="{x:Static local:Logger.LogDirectory}" FontStyle="Italic"/>
                            </TextBlock>
                        </Button.Content>
                    </Button>

                    <GroupBox x:Name="ParamsOutOptions"  Header="Params out"  HorizontalAlignment="Right" Grid.Column="1">
                        <StackPanel>
                            <RadioButton IsChecked="{Binding ExportVisibleParams}" Content="Visible" GroupName="ParamsOut"/>
                            <RadioButton IsChecked="{Binding ExportVisibleParams, Mode=OneWay, Converter={local:ParamsOutVisibleConverter}}" Content="Selected" GroupName="ParamsOut"/>
                        </StackPanel>
                    </GroupBox>

                    <Button x:Name="ExportConfig" Content="{StaticResource XMLFile}" ToolTip="Export parameters file" Grid.Column="2" Height="35" Width="35" Margin="2.5,0,0,0" Click="ExportConfig_Click"/>
                </Grid>

            </Grid>
            <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" Grid.ColumnSpan="3" />
            <GroupBox Header="Log" Grid.Row="3" Grid.ColumnSpan="3">
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Notifier.Notifications}" SelectionMode="Single" IsReadOnly="True" Margin="0,1,0,0">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Type" Binding="{Binding NotificationType}"/>
                        <DataGridTextColumn Header="Message" Binding="{Binding Message}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" DataContext="{Binding ElementName=dataGridInputs, Path=SelectedItem}" Grid.Row="1" Grid.Column="2">
                <StackPanel VerticalAlignment="Top">
                    <Expander  Header="Input">

                        <local:SummaryDisplay Margin="0,8,0,0">
                            <local:SummaryDisplay.DataContext>
                                <MultiBinding Converter="{StaticResource TitleValueConverter}">
                                    <MultiBinding.ConverterParameter>
                                        <x:Array Type="sys:String">
                                            <sys:String>Chunk name:</sys:String>
                                            <sys:String>eMS project id:</sys:String>
                                            <sys:String>eMS node external id:</sys:String>
                                            <sys:String>Incremental:</sys:String>
                                            <sys:String>Check-in:</sys:String>
                                            <sys:String>3D mapping:</sys:String>
                                            <sys:String>Comment:</sys:String>
                                            <sys:String>Command:</sys:String>
                                            <sys:String>XML:</sys:String>
                                        </x:Array>
                                    </MultiBinding.ConverterParameter>

                                    <Binding Path="ChunkName"/>
                                    <Binding Path="CCCommandParameters.ProjectId"/>
                                    <Binding Path="CCCommandParameters.NodeExternalId"/>
                                    <Binding Path="CCCommandParameters.Incremental"/>
                                    <Binding Path="CCCommandParameters.CheckIn"/>
                                    <Binding Path="CCCommandParameters.ThreeDMapping"/>
                                    <Binding Path="CCCommandParameters.Comment"/>
                                    <Binding Path="CCCommandParameters"/>
                                    <Binding Path="XMLElement"/>
                                </MultiBinding>
                            </local:SummaryDisplay.DataContext>
                        </local:SummaryDisplay>

                    </Expander>

                    <Expander Header="Current iteration">

                        <local:SummaryDisplay Margin="0,8,0,0">
                            <local:SummaryDisplay.DataContext>
                                <MultiBinding Converter="{StaticResource TitleValueConverter}">
                                    <MultiBinding.ConverterParameter>
                                        <x:Array Type="sys:String">
                                            <sys:String>Number:</sys:String>
                                            <sys:String>Status:</sys:String>
                                            <sys:String>Start time:</sys:String>
                                            <sys:String>Duration:</sys:String>
                                            <sys:String>Message:</sys:String>
                                        </x:Array>
                                    </MultiBinding.ConverterParameter>

                                    <Binding Path="CurrentActiveIteration.IterationNumber"/>
                                    <Binding Path="CurrentActiveIteration.CurrentStatus"/>
                                    <Binding Path="CurrentActiveIteration.StartTime"/>
                                    <Binding Path="CurrentActiveIteration.Duration"/>
                                    <Binding Path="CurrentActiveIteration.Message"/>
                                </MultiBinding>
                            </local:SummaryDisplay.DataContext>
                        </local:SummaryDisplay>

                    </Expander>

                    <Expander Header="Iterations">

                        <DataGrid AlternatingRowBackground="#FFD9D9D9" VerticalGridLinesBrush="#FFD9D9D9" HorizontalGridLinesBrush="#FFD9D9D9" ItemsSource="{Binding Iterations}" AutoGenerateColumns="False" IsReadOnly="True" AlternationCount="2" SelectionUnit="Cell" Margin="0,8,0,0" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="#" Binding="{Binding IterationNumber}" SortDirection="Descending"/>
                                <DataGridTextColumn Header="Status" Binding="{Binding CurrentStatus}"/>
                                <DataGridTextColumn Header="Start time" Binding="{Binding StartTime}"/>
                                <DataGridTextColumn Header="Duration" Binding="{Binding Duration, StringFormat={}{0:hh':'mm':'ss}}"/>
                                <DataGridTextColumn Header="Message" Binding="{Binding Message}" Width="200">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Execution log" Binding="{Binding ExecutionLogString}" Width="250">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                    </Expander>
                </StackPanel>
            </ScrollViewer>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="1"/>
        </Grid>
    </Grid>
</Window>